{"ast":null,"code":"var _jsxFileName = \"/Users/coderdojo/QuizApp/src/components/QuestionCard.tsx\";\nimport React from \"react\"; //types\n\n//Styles\nimport { Wrapper } from \"./QuestionCard.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionCard = ({\n  question,\n  answers,\n  callback,\n  userAnswer,\n  questionNr,\n  totalQuestions\n}) => /*#__PURE__*/_jsxDEV(Wrapper, {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"number\",\n      children: [\"Question: \", questionNr, \"/\", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: userAnswer ? true : false,\n          value: answer,\n          onClick: callback,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: answer\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, answer, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["/Users/coderdojo/QuizApp/src/components/QuestionCard.tsx"],"names":["React","Wrapper","QuestionCard","question","answers","callback","userAnswer","questionNr","totalQuestions","__html","map","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA;AACA,SAASC,OAAT,QAAuC,uBAAvC;;;AAWA,MAAMC,YAA6B,GAAG,CAAC;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,OAFqC;AAGrCC,EAAAA,QAHqC;AAIrCC,EAAAA,UAJqC;AAKrCC,EAAAA,UALqC;AAMrCC,EAAAA;AANqC,CAAD,kBAQpC,QAAC,OAAD;AAAA,yBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA,+BACaD,UADb,OAC0BC,cAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAG,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEN;AAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBACGC,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACX;AAAA,+BACE;AACE,UAAA,QAAQ,EAAEL,UAAU,GAAG,IAAH,GAAU,KADhC;AAEE,UAAA,KAAK,EAAEK,MAFT;AAGE,UAAA,OAAO,EAAEN,QAHX;AAAA,iCAKE;AAAM,YAAA,uBAAuB,EAAE;AAAEI,cAAAA,MAAM,EAAEE;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QARF;;KAAMT,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n//types\nimport { AnswerObject } from \"../App\";\n//Styles\nimport { Wrapper, ButtonWrapper } from \"./QuestionCard.styles\";\n\ntype Props = {\n  question: string;\n  answers: string[];\n  callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  userAnswer: AnswerObject | undefined;\n  questionNr: number;\n  totalQuestions: number;\n};\n\nconst QuestionCard: React.FC<Props> = ({\n  question,\n  answers,\n  callback,\n  userAnswer,\n  questionNr,\n  totalQuestions,\n}) => (\n  <Wrapper>\n    <div>\n      <p className=\"number\">\n        Question: {questionNr}/{totalQuestions}\n      </p>\n      <p dangerouslySetInnerHTML={{ __html: question }} />\n      <div>\n        {answers.map((answer) => (\n          <div key={answer}>\n            <button\n              disabled={userAnswer ? true : false}\n              value={answer}\n              onClick={callback}\n            >\n              <span dangerouslySetInnerHTML={{ __html: answer }} />\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  </Wrapper>\n);\n\nexport default QuestionCard;\n"]},"metadata":{},"sourceType":"module"}